name: Download a parent image, build a new one, and test it; upload the image, tags, build history line and manifest to GitHub artifacts

env:
  REGISTRY: quay.io
  OWNER: ${{ github.repository_owner }}

on:
  workflow_call:
    inputs:
      parent-image:
        description: Parent image name
        required: true
        type: string
      parent-variant:
        description: Parent variant tag prefix
        required: false
        type: string
        default: default
      image:
        description: Image name
        required: true
        type: string
      variant:
        description: Variant tag prefix
        required: false
        type: string
        default: default
      platform:
        description: Image platform
        required: true
        type: string
      runs-on:
        description: GitHub Actions Runner image
        required: true
        type: string
      timeout-minutes:
        description: Timeout in minutes
        required: true
        type: number

jobs:
  build-test-upload:
    runs-on: ${{ inputs.runs-on }}
    timeout-minutes: ${{ inputs.timeout-minutes }}

    steps:
      - name: Free disk space 🧹
        uses: endersonmenezes/free-disk-space@v2
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: false
          remove_swap: true
          remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
          remove_packages_one_command: true
          remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell /usr/local/julia /usr/local/aws-cli /usr/local/aws-sam-cli /usr/share/gradle"

      - name: Checkout Repo ⚡️
        uses: actions/checkout@v4
      - name: Create dev environment 📦
        uses: ./.github/actions/create-dev-env

      - name: Get commit SHA
        id: get_sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Load parent built image to Docker 📥
        if: inputs.parent-image != ''
        uses: ./.github/actions/load-image
        with:
          image: ${{ inputs.parent-image }}
          platform: ${{ inputs.platform }}
          variant: ${{ inputs.parent-variant }}

      - name: Pull base ubuntu image 📥
        if: inputs.parent-image == ''
        run: docker pull ubuntu:24.04
        shell: bash

      - name: Build image 🛠
        run: |
          docker buildx build \
            --rm --force-rm \
            --tag ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }} \
            images/${{ inputs.image }}/${{ inputs.variant != 'default' && inputs.variant || '.' }}/ \
            --build-arg REGISTRY=${{ env.REGISTRY }} \
            --build-arg OWNER=${{ env.OWNER }} \
            --build-arg CONTAINER_BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg CONTAINER_IMAGE_NAME=${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }} \
            --build-arg CONTAINER_GIT_REPOSITORY=${{ github.repository }} \
            --build-arg CONTAINER_GIT_COMMIT=${{ steps.get_sha.outputs.sha }} \
            --secret id=github_token,env=GITHUB_TOKEN
        env:
          DOCKER_BUILDKIT: 1
          # Full logs for CI build
          BUILDKIT_PROGRESS: plain
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      - name: Write tags file 🏷
        run: |
          python3 -m tagging.apps.write_tags_file \
            --registry ${{ env.REGISTRY }} \
            --owner ${{ env.OWNER }} \
            --image ${{ inputs.image }} \
            --variant ${{ inputs.variant }} \
            --tags-dir /tmp/jupyter/tags/
        shell: bash
      - name: Upload tags file 💾
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-${{ inputs.variant }}-tags
          path: /tmp/jupyter/tags/${{ inputs.platform }}-${{ inputs.variant }}-${{ inputs.image }}.txt
          retention-days: 3

      - name: Write manifest and build history file 🏷
        run: |
          python3 -m tagging.apps.write_manifest \
            --registry ${{ env.REGISTRY }} \
            --owner ${{ env.OWNER }} \
            --image ${{ inputs.image }} \
            --variant ${{ inputs.variant }} \
            --hist-lines-dir /tmp/jupyter/hist_lines/ \
            --manifests-dir /tmp/jupyter/manifests/ \
            --repository ${{ github.repository }}
        shell: bash
      - name: Upload manifest file 💾
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-${{ inputs.variant }}-manifest
          path: /tmp/jupyter/manifests/${{ inputs.platform }}-${{ inputs.variant }}-${{ inputs.image }}-*.md
          retention-days: 3
      - name: Upload build history line 💾
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-${{ inputs.variant }}-history_line
          path: /tmp/jupyter/hist_lines/${{ inputs.platform }}-${{ inputs.variant }}-${{ inputs.image }}-*.txt
          retention-days: 3

      - name: Save image as a tar for later use 💾
        run: |
          mkdir -p /tmp/jupyter/images/
          docker save \
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }} \
            | zstd > /tmp/jupyter/images/${{ inputs.image }}-${{ inputs.platform }}-${{ inputs.variant }}.tar.zst
        shell: bash
      - name: Upload image as artifact 💾
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-${{ inputs.variant }}
          path: /tmp/jupyter/images/${{ inputs.image }}-${{ inputs.platform }}-${{ inputs.variant }}.tar.zst
          retention-days: 3
          compression-level: 0

      - name: Run tests ✅
        run: |
          python3 -m tests.run_tests \
            --registry ${{ env.REGISTRY }} \
            --owner ${{ env.OWNER }} \
            --image ${{ inputs.image }}
        shell: bash
